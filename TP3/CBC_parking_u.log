Welcome to the CBC MILP Solver 
Version: 2.10.3 
Build Date: Dec 15 2019 

command line - C:\Users\YEO Nadege\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.9_qbz5n2kfra8p0\LocalCache\local-packages\Python39\site-packages\pulp\apis\..\solverdir\cbc\win\64\cbc.exe C:\PROGRA~1\KMSpico\temp\5eba90910f0547d6b6f57ad03a64fd85-pulp.mps timeMode elapsed branch printingOptions all solution C:\PROGRA~1\KMSpico\temp\5eba90910f0547d6b6f57ad03a64fd85-pulp.sol (default strategy 1)
At line 2 NAME          MODEL
At line 3 ROWS
At line 9 COLUMNS
At line 63 RHS
At line 68 BOUNDS
At line 84 ENDATA
Problem MODEL has 4 rows, 18 columns and 22 elements
Coin0008I MODEL read with 0 errors
Option for timeMode changed from cpu to elapsed
Continuous objective value is 27.05 - 0.01 seconds
Cgl0004I processed model has 2 rows, 14 columns (13 integer (11 of which binary)) and 28 elements
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.322222
Cbc0038I Solution found of 27.05
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 3 columns
Cbc0038I Cleaned solution of 27.1
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound improved solution from 27.1 to 27.1 (0.02 seconds)
Cbc0038I Round again with cutoff of 27.095
Cbc0038I Solution found of 27.05
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 3 rows 14 columns, reduced to 2 rows 3 columns
Cbc0038I Mini branch and bound could not fix general integers
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of 27.1 - took 0.01 seconds
Cbc0012I Integer solution of 27.1 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 3 columns
Cbc0031I 1 added rows had average density of 14
Cbc0013I At root node, 1 cuts changed objective from 27.05 to 27.05 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 29 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 27.1 best solution, best possible 27.05 (0.03 seconds)
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 6 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 7 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 8 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 7 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 4 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 5 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 8 columns
Cbc0010I After 1000 nodes, 4 on tree, 27.1 best solution, best possible 27.05 (0.16 seconds)
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 7 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 6 columns
Cbc0038I Full problem 2 rows 14 columns, reduced to 2 rows 8 columns
Cbc0010I After 2000 nodes, 5 on tree, 27.1 best solution, best possible 27.05 (0.26 seconds)
Cbc0001I Search completed - best objective 27.1, took 10622 iterations and 10144 nodes (0.30 seconds)
Cbc0032I Strong branching done 3174 times (3447 iterations), fathomed 437 nodes and fixed 0 variables
Cbc0041I Maximum depth 12, 0 variables fixed on reduced cost (complete fathoming 674 times, 7702 nodes taking 7298 iterations)
Cuts at root node changed objective from 27.05 to 27.05
Probing was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Gomory was tried 27 times and created 29 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Knapsack was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Clique was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
FlowCover was tried 27 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Optimal solution found

Objective value:                27.10000000
Enumerated nodes:               10144
Total iterations:               10622
Time (CPU seconds):             0.30
Time (Wallclock seconds):       0.30

Option for printingOptions changed from normal to all
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.31

